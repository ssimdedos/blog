/* Sidebar.css */

.hot-post-h4 {
  font-family: 'MaruBuriSemiBold';
  padding-top: 10px;
  padding-left: 4px;
  margin-bottom: 4px;
}
.hot-post-container {
  font-family: 'MaruBuriSemiBold';
  font-size: 0.8rem;
  border-bottom: 1px dashed #d3d3d3; /* 항목 구분선 */
  border-top: 1px dashed #d3d3d3; /* 항목 구분선 */
}
.hot-post-li {
  list-style: none;
  padding: 3px 12px;
  margin-bottom: 3px;
  display: flex;
  align-items: center; /* 수직 중앙 정렬 */
  cursor: pointer; /* 클릭 가능한 요소임을 표시 */
}
.hot-post-li a { /* hot-post-li 내부의 Link (a 태그로 렌더링됨) */
  text-decoration: none;
  color: inherit; /* 부모로부터 글자색 상속 (기존 디자인 유지) */
  display: -webkit-box;     /* Flexbox 모델을 Webkit 엔진에 맞게 사용 */
  -webkit-line-clamp: 2;    /* 텍스트를 2줄까지만 표시하고 넘치면 ... */
  -webkit-box-orient: vertical; /* 박스 내부 콘텐츠의 방향을 세로로 설정 */
  overflow: hidden;      /* 컨테이너를 넘어가는 텍스트를 숨김 */
  /* Link가 flex 아이템으로 공간을 제대로 차지하도록 함 */
  flex-grow: 1; /* 남은 공간을 채우도록 함 (오른쪽에 다른 요소가 있을 경우 대비) */
  min-width: 0; /* flex 아이템이 넘칠 때 줄어들 수 있도록 허용 */
}
.hot-post-li a:hover {
  color: #808080;
}
.hot-post-li:not(:last-child) {
  border-bottom: 1px dashed #d3d3d3;
  /* 기존 .hot-post-container에 top/bottom border가 있으므로,
    각 li 항목에는 마지막 li만 제외하고 border-bottom을 주는 게 더 이미지와 유사 */
}
.category-box {
  border-bottom: 1px dashed #d3d3d3; /* 항목 구분선 */
  font-family: 'MaruBuriSemiBold';
  font-size: 0.87rem;
}
.category-li {
  list-style: none;
  padding: 3px 12px;
  margin-bottom: 3px;
  display: flex;
  justify-content: space-between; /* 텍스트와 아이콘을 양 끝으로 정렬 */
  align-items: center; /* 수직 중앙 정렬 */
  cursor: pointer; /* 클릭 가능한 요소임을 표시 */
}

.subcategory-li {
  list-style: none;
  padding: 3px 12px 3px 12px; /* 서브카테고리 들여쓰기 위해 padding-left 늘림 */
  margin-bottom: 3px;
  /* border-bottom: 1px solid #eee; */
  font-family: 'MaruBuri';
  font-size: 0.87rem;
  cursor: pointer; /* 클릭 가능한 요소임을 표시 */
}

a {
  text-decoration: none;
  color: #333333;
}

.subcategory-list {
  padding-inline-start: 20px;
  margin-block-start: 3px;
}

/* --- 새로 추가되거나 수정된 스타일 --- */

/* 카테고리 링크 자체 스타일 (기존 a 스타일에 포함될 수 있지만, 명시적으로) */
.category-link {
  text-decoration: none;
  color: #333333; /* 기본 a 태그 색상 따름 */
  flex-grow: 1; /* Link가 li 내에서 가능한 공간을 모두 차지하도록 */
  padding: 3px 0; /* li의 패딩을 Link에 주어 클릭 영역 확장 (선택 사항) */
}

/* 서브카테고리 링크 자체 스타일 */
.subcategory-link {
  text-decoration: none;
  color: #333333; /* 기본 a 태그 색상 따름 */
  display: block; /* Link 영역 전체를 클릭 가능하게 */
  /* padding은 부모 li에서 처리되므로 여기서는 주지 않음 */
}

/* 토글 아이콘 (모바일에서만 보일 것) */
.toggle-icon {
  margin-left: 10px;
  font-size: 0.8em;
  color: #888;
  /* 부드러운 회전 애니메이션 */
  transition: transform 0.3s ease;
  transform: rotate(0deg);
}

/* 토글 아이콘 회전 */
.toggle-icon.rotated {
  transform: rotate(31deg); /* 열릴 때 아이콘을 180도 회전 */
}

/* --- 모바일 반응형 스타일 (CategoryAndSubcategoryList.jsx의 isMobile 상태와 연동) --- */
@media (max-width: 768px) { /* 모바일 브레이크포인트 */

  /* 서브카테고리 목록을 접을 수 있게 만드는 클래스 (JS에서 추가/제거) */
  .subcategory-list.collapsible {
    max-height: 0;        /* 기본적으로 숨겨진 상태 (닫힘) */
    overflow: hidden;     /* 내용이 넘칠 경우 숨김 */
    transition: max-height 0.3s ease-out; /* 부드러운 접힘 애니메이션 */
    padding-left: 0; /* ul의 기본 패딩 제거 */
    margin: 0; /* ul의 기본 마진 제거 */
  }

  /* 서브카테고리 목록이 열린 상태 */
  .subcategory-list.collapsible.open {
    max-height: 500px; /* 서브카테고리 내용의 최대 높이보다 크게 설정 (충분히 큰 값) */
    transition: max-height 0.5s ease-in; /* 열릴 때 더 부드러운 애니메이션 */
  }

  /* 모바일에서 카테고리 링크 클릭 시 (선택 사항)
     Link의 기본 동작(페이지 이동)은 유지하되,
     토글 아이콘이 클릭되었을 때만 토글되도록 할 수도 있습니다.
     (이 경우 CategoryAndSubcategoryList.jsx의 toggleCategory 로직을 수정해야 합니다.)
  */
}